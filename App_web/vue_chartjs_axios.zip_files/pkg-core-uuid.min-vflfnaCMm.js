define("metaserver/static/js/modules/clean/security/sjcl_crypto",["require","exports","tslib","sjcl"],(function(e,t,s,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getRandomValues=void 0,r=s.__importStar(r),t.getRandomValues=function(e){const t=r.random.randomWords(e.length);for(let s=0,r=e.length,n=0<=r;n?s<r:s>r;n?s++:s--)e[s]=t[s];return e}})),define("metaserver/static/js/modules/clean/uuid/uuid",["require","exports","metaserver/static/js/modules/clean/uuid/insecure_uuid","metaserver/static/js/modules/clean/security/sjcl_crypto"],(function(e,t,s,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.UUID=void 0;const n=/generator isn't seeded/;class a extends s.InsecureUUID{static getRandomBytes(e={}){const t=new Array(16);try{r.getRandomValues(t)}catch(s){if(s.message.match(n)&&e.allowInsecure)return this.getInsecureRandomValues(t);throw s}return t.map(e=>this.toByte(e))}static v4(e={}){const t=this.getRandomBytes({allowInsecure:e.allowInsecure});return t[6]=15&t[6]|64,t[8]=63&t[8]|128,this.bytesToUUIDString(t)}}t.UUID=a}));
//# sourceMappingURL=pkg-core-uuid.min.js-vflB42x09.map